<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts | Georgios Exarchakis</title><link>https://exarchakis.net/post/</link><atom:link href="https://exarchakis.net/post/index.xml" rel="self" type="application/rss+xml"/><description>Posts</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>© 2018</copyright><lastBuildDate>Tue, 02 Apr 2019 13:37:24 +0200</lastBuildDate><image><url>https://exarchakis.net/media/George%20Exarchakis.jpg</url><title>Posts</title><link>https://exarchakis.net/post/</link></image><item><title>Internship Position</title><link>https://exarchakis.net/post/intern/</link><pubDate>Tue, 02 Apr 2019 13:37:24 +0200</pubDate><guid>https://exarchakis.net/post/intern/</guid><description>&lt;ul>
&lt;li>&lt;strong>Keywords:&lt;/strong> Scattering Transforms, Convolutional Neural Networks, Health Sciences&lt;/li>
&lt;li>&lt;strong>Salary:&lt;/strong> ~ 550 euros per month&lt;/li>
&lt;li>&lt;strong>Profile:&lt;/strong> M2 student in CS/Math/Physics or a related field&lt;/li>
&lt;li>&lt;strong>Institute:&lt;/strong> IHU Strasbourg/University of Strasbourg&lt;/li>
&lt;li>&lt;strong>Location:&lt;/strong> Strasbourg, France&lt;/li>
&lt;li>&lt;strong>Supervisor:&lt;/strong> Dr Georgios Exarchakis&lt;/li>
&lt;/ul>
&lt;p>We offer an intern position attached to the &lt;a href="http://camma.u-strasbg.fr/" target="_blank" rel="noopener">CAMMA team&lt;/a> at &lt;a href="https://www.ihu-strasbourg.eu/en" target="_blank" rel="noopener">IHU Strasbourg&lt;/a>/&lt;a href="https://unistra.fr" target="_blank" rel="noopener">University of Strasbourg&lt;/a> for motivated students interested in contributing to the development of Machine Learning algorithms for use in Health Sciences. The Institute provides a multi-disciplinary environment where clinicians collaborate with engineers to provide real-world surgical solutions. The internship is intended to be part of a larger project focused on Explainable AI. The intern will be expected to implement and test Wavelet Scattering Transforms[1,2] and Deep Convolutional Neural Networks for applications on CT scans.&lt;/p>
&lt;p>An ideal applicant will have a strong background in machine learning, and signal processing. The project also requires the ability to develop Convolutional Neural Networks in the Python programming language with at least one of the popular ML libraries, e.g. Pytorch, TensorFlow. Proficiency in spoken and written English is mandatory.&lt;/p>
&lt;p>The position is funded based on the number of working hours per month and typically amounts to approximately 550€ per month. There is a possibility of extending the internship into a PhD position in the area of Explainable AI.&lt;/p>
&lt;p>For further information on the application please contact &lt;a href="https://exarchakis.net" target="_blank" rel="noopener">Dr Georgios Exarchakis&lt;/a> at &lt;strong>georgios.exarchakis &amp;lt;at&amp;gt; ihu-strasbourg.eu&lt;/strong> with &lt;strong>“Internship at CAMMA”&lt;/strong> as the email title.&lt;/p>
&lt;p>[1] Eickenberg M., Exarchakis G., Hirn M., Mallat S., Thiry L. (2018). &lt;em>Solid harmonic wavelet scattering for predictions of molecule properties.&lt;/em> The Journal of chemical physics, 2018.&lt;br>
[2] Andreux M., Angles T., Exarchakis G., Leonarduzzi R., Rochette G., Thiry L., Zarka J., Mallat S., Andén J., Belilovsky E., Bruna J., Lostanlen V., Chaudhary M., Hirn M. J., Oyallon E., Zhang S., Cella C., Eickenberg M. (2020). &lt;em>Kymatio: Scattering Transforms in Python.&lt;/em> Journal of Machine Learning Research, 2020.&lt;/p></description></item><item><title>Kymatio</title><link>https://exarchakis.net/post/kymatio/</link><pubDate>Tue, 02 Apr 2019 13:37:24 +0200</pubDate><guid>https://exarchakis.net/post/kymatio/</guid><description>&lt;p>&lt;a href="https://kymat.io" target="_blank" rel="noopener">Kymatio&lt;/a> is a Python module for computing wavelet and scattering transforms.&lt;/p>
&lt;p>It is built on top of PyTorch, but also has a fast CUDA backend via cupy and skcuda.&lt;/p>
&lt;p>Use kymatio if you need a library that:&lt;/p>
&lt;ul>
&lt;li>integrates wavelet scattering in a deep learning architecture,&lt;/li>
&lt;li>supports 1-D, 2-D, and 3-D wavelets, and runs seamlessly on CPU and GPU hardware.&lt;/li>
&lt;li>A brief intro to wavelet scattering is provided in User Guide. For a list of publications see Publications.&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;p>In the Python intepreter, you may then call:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#f92672">import&lt;/span> kymatio&lt;/code>&lt;/pre>&lt;/div>
&lt;p>which should run without error if the package has been correctly installed.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#f92672">import&lt;/span> torch
&lt;span style="color:#f92672">from&lt;/span> kymatio &lt;span style="color:#f92672">import&lt;/span> Scattering2D
scattering &lt;span style="color:#f92672">=&lt;/span> Scattering2D(J&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>, shape&lt;span style="color:#f92672">=&lt;/span>(&lt;span style="color:#ae81ff">32&lt;/span>, &lt;span style="color:#ae81ff">32&lt;/span>))
x &lt;span style="color:#f92672">=&lt;/span> torch&lt;span style="color:#f92672">.&lt;/span>randn(&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">32&lt;/span>, &lt;span style="color:#ae81ff">32&lt;/span>)
Sx &lt;span style="color:#f92672">=&lt;/span> scattering(x)
&lt;span style="color:#66d9ef">print&lt;/span>(Sx&lt;span style="color:#f92672">.&lt;/span>size())&lt;/code>&lt;/pre>&lt;/div>
&lt;p>This should output:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">torch&lt;span style="color:#f92672">.&lt;/span>Size([&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">81&lt;/span>, &lt;span style="color:#ae81ff">8&lt;/span>, &lt;span style="color:#ae81ff">8&lt;/span>])&lt;/code>&lt;/pre>&lt;/div>
&lt;p>This corresponds to 81 scattering coefficients, each corresponding to an 8x8 image.&lt;/p>
&lt;p>Check out the &lt;a href="https://www.kymat.io/userguide.html#user-guide" target="_blank" rel="noopener">User Guide&lt;/a> for more scattering transform examples.&lt;/p></description></item></channel></rss>