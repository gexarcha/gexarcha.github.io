<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Georgios Exarchakis</title><link>https://exarchakis.net/</link><atom:link href="https://exarchakis.net/index.xml" rel="self" type="application/rss+xml"/><description>Georgios Exarchakis</description><generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© 2018</copyright><lastBuildDate>Mon, 19 Aug 2019 13:48:09 +0300</lastBuildDate><image><url>https://exarchakis.net/img/George%20Exarchakis.jpg</url><title>Georgios Exarchakis</title><link>https://exarchakis.net/</link></image><item><title>ProSper - A Python Library for Probabilistic Sparse Coding with Non-Standard Priors and Superpositions</title><link>https://exarchakis.net/publication/prosper/</link><pubDate>Mon, 19 Aug 2019 13:48:09 +0300</pubDate><guid>https://exarchakis.net/publication/prosper/</guid><description/></item><item><title>Kymatio</title><link>https://exarchakis.net/post/kymatio/</link><pubDate>Tue, 02 Apr 2019 13:37:24 +0200</pubDate><guid>https://exarchakis.net/post/kymatio/</guid><description>&lt;p>
&lt;a href="https://kymat.io" target="_blank" rel="noopener">Kymatio&lt;/a>
is a Python module for computing wavelet and scattering transforms.&lt;/p>
&lt;p>It is built on top of PyTorch, but also has a fast CUDA backend via cupy and skcuda.&lt;/p>
&lt;p>Use kymatio if you need a library that:&lt;/p>
&lt;ul>
&lt;li>integrates wavelet scattering in a deep learning architecture,&lt;/li>
&lt;li>supports 1-D, 2-D, and 3-D wavelets, and runs seamlessly on CPU and GPU hardware.&lt;/li>
&lt;li>A brief intro to wavelet scattering is provided in User Guide. For a list of publications see Publications.&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;p>In the Python intepreter, you may then call:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#f92672">import&lt;/span> kymatio&lt;/code>&lt;/pre>&lt;/div>
&lt;p>which should run without error if the package has been correctly installed.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#f92672">import&lt;/span> torch
&lt;span style="color:#f92672">from&lt;/span> kymatio &lt;span style="color:#f92672">import&lt;/span> Scattering2D
scattering &lt;span style="color:#f92672">=&lt;/span> Scattering2D(J&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>, shape&lt;span style="color:#f92672">=&lt;/span>(&lt;span style="color:#ae81ff">32&lt;/span>, &lt;span style="color:#ae81ff">32&lt;/span>))
x &lt;span style="color:#f92672">=&lt;/span> torch&lt;span style="color:#f92672">.&lt;/span>randn(&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">32&lt;/span>, &lt;span style="color:#ae81ff">32&lt;/span>)
Sx &lt;span style="color:#f92672">=&lt;/span> scattering(x)
&lt;span style="color:#66d9ef">print&lt;/span>(Sx&lt;span style="color:#f92672">.&lt;/span>size())&lt;/code>&lt;/pre>&lt;/div>
&lt;p>This should output:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">torch&lt;span style="color:#f92672">.&lt;/span>Size([&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">81&lt;/span>, &lt;span style="color:#ae81ff">8&lt;/span>, &lt;span style="color:#ae81ff">8&lt;/span>])&lt;/code>&lt;/pre>&lt;/div>
&lt;p>This corresponds to 81 scattering coefficients, each corresponding to an 8x8 image.&lt;/p>
&lt;p>Check out the
&lt;a href="https://www.kymat.io/userguide.html#user-guide" target="_blank" rel="noopener">User Guide&lt;/a>
for more scattering transform examples.&lt;/p></description></item><item><title>Kymatio: Scattering Transforms in Python</title><link>https://exarchakis.net/publication/kymatio-scattering-transforms-in-python/</link><pubDate>Fri, 28 Dec 2018 00:00:00 +0000</pubDate><guid>https://exarchakis.net/publication/kymatio-scattering-transforms-in-python/</guid><description>&lt;!-- raw HTML omitted --></description></item><item><title>Truncated Variational Sampling for ‘Black Box’ Optimization of Generative Models</title><link>https://exarchakis.net/publication/truncated-variational-sampling-for-black-box-optimization-of-generative-models/</link><pubDate>Sat, 30 Jun 2018 14:38:58 +0200</pubDate><guid>https://exarchakis.net/publication/truncated-variational-sampling-for-black-box-optimization-of-generative-models/</guid><description/></item><item><title>Solid harmonic wavelet scattering for predictions of molecule properties</title><link>https://exarchakis.net/publication/solid-harmonic-wavelet-scattering-for-predictions-of-molecule-properties/</link><pubDate>Thu, 28 Jun 2018 00:00:00 +0000</pubDate><guid>https://exarchakis.net/publication/solid-harmonic-wavelet-scattering-for-predictions-of-molecule-properties/</guid><description>&lt;!-- raw HTML omitted --></description></item><item><title>Solid Harmonic Wavelet Scattering: Predicting Quantum Molecular Energy from Invariant Descriptors of 3D Electronic Densities</title><link>https://exarchakis.net/publication/solid-harmonic-wavelet-scattering-predicting-quantum-molecular-energy-from-invariant-descriptors-of-3d-electronic-densities/</link><pubDate>Tue, 21 Nov 2017 00:00:00 +0000</pubDate><guid>https://exarchakis.net/publication/solid-harmonic-wavelet-scattering-predicting-quantum-molecular-energy-from-invariant-descriptors-of-3d-electronic-densities/</guid><description>&lt;!-- raw HTML omitted --></description></item><item><title>Discrete Sparse Coding</title><link>https://exarchakis.net/publication/discrete-sparse-coding/</link><pubDate>Wed, 01 Nov 2017 00:00:00 +0000</pubDate><guid>https://exarchakis.net/publication/discrete-sparse-coding/</guid><description>&lt;!-- raw HTML omitted --></description></item><item><title>Probabilistic Models for Invariant Representations and Transformations</title><link>https://exarchakis.net/publication/probabilistic-models-for-invariant-representations-and-transformations/</link><pubDate>Thu, 01 Dec 2016 00:00:00 +0000</pubDate><guid>https://exarchakis.net/publication/probabilistic-models-for-invariant-representations-and-transformations/</guid><description>&lt;!-- raw HTML omitted --></description></item><item><title>What Are the Invariant Occlusive Components of Image Patches? A Probabilistic Generative Approach</title><link>https://exarchakis.net/publication/what-are-the-invariant-occlusive-components-of-image-patches-a-probabilistic-generative-approach/</link><pubDate>Thu, 05 Dec 2013 00:00:00 +0000</pubDate><guid>https://exarchakis.net/publication/what-are-the-invariant-occlusive-components-of-image-patches-a-probabilistic-generative-approach/</guid><description>&lt;!-- raw HTML omitted --></description></item><item><title>Learning invariant features by harnessing the aperture problem</title><link>https://exarchakis.net/publication/learning-invariant-features-by-harnessing-the-aperture-problem/</link><pubDate>Wed, 05 Jun 2013 00:00:00 +0000</pubDate><guid>https://exarchakis.net/publication/learning-invariant-features-by-harnessing-the-aperture-problem/</guid><description>&lt;!-- raw HTML omitted --></description></item><item><title>Ternary Sparse Coding</title><link>https://exarchakis.net/publication/ternary-sparse-coding/</link><pubDate>Mon, 18 Jun 2012 18:29:37 +0200</pubDate><guid>https://exarchakis.net/publication/ternary-sparse-coding/</guid><description/></item><item><title>Discrete Symmetric Priors for Sparse Coding</title><link>https://exarchakis.net/publication/discrete-symmetric-priors-for-sparse-coding/</link><pubDate>Tue, 04 Oct 2011 00:00:00 +0000</pubDate><guid>https://exarchakis.net/publication/discrete-symmetric-priors-for-sparse-coding/</guid><description>&lt;!-- raw HTML omitted --></description></item></channel></rss>